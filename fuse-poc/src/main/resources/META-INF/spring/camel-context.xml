<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
							http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
							http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
							http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">


	<jdbc:embedded-database id="dataSource" type="DERBY">
        <jdbc:script location="classpath:sql/init.sql"/>
    </jdbc:embedded-database>
    
    <!-- this is the CXF web service we use as the front end -->
  <cxf:cxfEndpoint id="account"
                   address="http://localhost:9001/proxy-crm"
                   endpointName="s:AccountEndpoint"
                   serviceName="s:AccountEndpointService"
                   wsdlURL="etc/account.wsdl"
                   xmlns:s="http://account.poc.fuse.tmg.com"/>
    
    
	
	<!-- Use a bean to start and stop the real web service (is not Camel specific) -->
  	<!-- In a real use-case the real web service would be the real CRM service running on another server
       but we simulate this in the same JVM -->
	<bean id="realWebService" class="com.tmg.fuse.poc.RealCRMWebServiceBean"
        init-method="start" destroy-method="stop">
    	<!-- url of the real web service we have proxied -->
    	<property name="url" value="http://localhost:9000/real-crm-service"/>
  	</bean>
	
	<!-- bean that enriches the SOAP request -->
  	<bean id="XRefIdToSOAPBean" class="com.tmg.fuse.poc.XRefIdToSOAPBean"/>
  
  
	<!--  Set up the JMS Configuration-->
	<bean id="jms" class="org.apache.camel.component.jms.JmsComponent"> 
	  <property name="configuration" ref="jmsConfig" />
	 </bean>	
	  
	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration" >
	  <property name="connectionFactory" ref="jmsPooledConnectionFactory" /> 
	  <property name="transacted" value="true" /> 
	  <property name="transactionManager" ref="jmsTransactionManager" />
	  <property name="cacheLevelName" value="CACHE_CONSUMER" />
	 </bean>
	
	<bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
	  <property name="connectionFactory" ref="jmsPooledConnectionFactory" />
	 </bean>           
	
	<bean id="jmsPooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
	      init-method="start" destroy-method="stop" >
	  <property name="maxConnections" value="2" />
	  <property name="connectionFactory" ref="jmsConnectionFactory" />
	 </bean> 
	
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"> 
	  <property name="brokerURL" value="tcp://localhost:61617" /> 
	  <property name="watchTopicAdvisories" value="false" />
	</bean>
	<!--  End of JMS Configuration -->

	<!--  Set up the Rest Resources -->
    <cxf:rsServer id="rsServer" address="http://localhost:9090/route" serviceClass="com.tmg.fuse.poc.AccountResource"/>

	

	<!-- Camel Context Definition -->
	<camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
	
	<endpoint id="callRealCRMWebService" uri="http://localhost:9000/real-crm-service?throwExceptionOnFailure=false"/>
 	
	
    <route>
        <from uri="cxfrs://http://localhost:9090/route?resourceClasses=com.tmg.fuse.poc.AccountResource"/>
        <log message="Retrieved request for operation: ${header.operationName}"/>
        
        <choice>
            <when>
                <simple>${header.operationName} == 'retrieveAccount'</simple>
                <log message="Retrieving account from CRM"/>
                <setBody>
		        	<simple>select xrefId from account where id = ${body}</simple>
		        </setBody>
		        <enrich uri="jdbc:dataSource"/>
                <to uri="bean:XRefIdToSOAPBean"/>
                <log message="Calling CRM service"/>
                <to uri="cxf:bean:account?dataFormat=MESSAGE"/>
             
            </when>
            <when>
                <simple>${header.operationName} == 'createAccount'</simple>
                <log message="Putting createAccount message on topic"/>
                <to uri="activemq:topic:accountTopic"/>
            </when>
            <otherwise>
            	<log message="Request unavailable"/>
            </otherwise>
        </choice>
             
    </route>
    
    
    <!-- Dummy route for the CRM backend service. Has a cxf proxy service infront of the real one -->
    <route streamCache="true">
      <!-- CXF consumer using MESSAGE format -->
      <from uri="cxf:bean:account?dataFormat=MESSAGE"/>
      <!-- log input received -->
      <to uri="log:input"/>
      <!-- send proxied request to real web service -->
      <to ref="callRealCRMWebService"/>
      <!-- log answer from real web service -->
      <to uri="log:output?showStreams=true"/>
    </route>
    
    
</camelContext>
</beans>