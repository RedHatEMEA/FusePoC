<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
							http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
							http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
							http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<!--  *************************  -->
	<!--  JDBC Configuration	     -->
	<!--  *************************  -->	

	<jdbc:embedded-database id="dataSource" type="DERBY">
        <jdbc:script location="classpath:sql/init.sql"/>
    </jdbc:embedded-database>
    
    
	<!--  *************************  -->
	<!--  CXF Endpoint Configuration -->
	<!--  *************************  -->	    
  <cxf:cxfEndpoint id="account"
                   address="http://localhost:9001/proxy-crm"
                   endpointName="s:AccountService"
                   serviceName="s:AccountServiceService"
                   serviceClass="com.tmg.fuse.poc.AccountEndpointService"
                   wsdlURL="etc/currentCRMService.wsdl"
                   xmlns:s="http://account.poc.fuse.tmg.com"/>
    
	<!--  *************************  -->
	<!--  JMS Configuration          -->
	<!--  *************************  -->	
<<<<<<< HEAD

	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
      <property name="brokerURL" value="vm:tmgAMQBroker"/>
   	</bean>
 
=======
	<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
      <property name="brokerURL" value="vm:tmgAMQBroker"/>
   	</bean>

>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
	<bean id="jms" class="org.apache.camel.component.jms.JmsComponent"> 
	  <property name="configuration" ref="jmsConfig" />
	 </bean>	
	  
	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration" >
	  <property name="connectionFactory" ref="jmsPooledConnectionFactory" /> 
	  <property name="transacted" value="true" /> 
	  <property name="transactionManager" ref="jmsTransactionManager" />
	  <property name="cacheLevelName" value="CACHE_CONSUMER" />
	 </bean>
	
	<bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
	  <property name="connectionFactory" ref="jmsPooledConnectionFactory" />
	 </bean>           
	
	<bean id="jmsPooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
	      init-method="start" destroy-method="stop" >
	  <property name="maxConnections" value="2" />
	  <property name="connectionFactory" ref="jmsConnectionFactory" />
	 </bean> 
	
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"> 
	  <property name="brokerURL" value="vm:tmgAMQBroker" /> 
	  <property name="watchTopicAdvisories" value="false" />
	</bean>
<<<<<<< HEAD
	 
=======
	
>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
	
	<!--  ************************* -->
	<!--  Set up Error Handlers -->
	<!--  ************************* -->	
	<bean id="accountTopicErrorHandler" class="org.apache.camel.builder.DeadLetterChannelBuilder">
       <property name="deadLetterUri" value="activemq:accountTopicDLQ"/>
       <property name="redeliveryPolicy" ref="accountTopicRedeliveryPolicyConfig"/>
   </bean>
 
   <!-- here we set the redelivery settings -->
	<bean id="accountTopicRedeliveryPolicyConfig" class="org.apache.camel.processor.RedeliveryPolicy">
       <property name="maximumRedeliveries" value="3"/>
       <property name="redeliveryDelay" value="250"/>
   </bean>

	<!--  ************************* -->
	<!--  Set up the Rest Resources -->
	<!--  ************************* -->

    <cxf:rsServer id="rsServer" address="http://localhost:9090/route" serviceClass="com.tmg.fuse.poc.AccountResource"/>


	<!--  *******************************  -->
	<!--  Set up Beans to assist with POC  -->
	<!--  *******************************  -->	
<<<<<<< HEAD
	
	<!-- Use a bean to start and stop the real web service (is not Camel specific) -->
  	<!-- In a real use-case the real web service would be the real CRM service running on another server but we simulate this in the same JVM -->
	<bean id="realWebService" class="com.tmg.fuse.poc.RealCRMWebServiceBean"
        init-method="start" destroy-method="stop">
    	<!-- url of the real web service we have proxied -->
    	<property name="url" value="http://localhost:9000/real-crm-service"/>
  	</bean>
	
	<!-- bean that enriches the SOAP request -->
  	<bean id="retrieveAccount" class="com.tmg.fuse.poc.RetrieveAccountProcessor"/>
  
    <bean id="accountprocessor" class="com.tmg.fuse.poc.AccountProcessor"/>
	<bean id="guidEnrichStrategy" class="com.tmg.fuse.poc.GUIDAggregationStrategy"/>
	
	
	<bean id="camelTracer" class="org.apache.camel.processor.interceptor.Tracer">
	    <property name="traceExceptions" value="true"/>
	    <property name="traceInterceptors" value="true"/>
	    <property name="logLevel" value="INFO"/>
	    <property name="logName" value="com.mycompany.messages"/>
	</bean>
=======
	
	<!-- Use a bean to start and stop the real web service (is not Camel specific) -->
  	<!-- In a real use-case the real web service would be the real CRM service running on another server but we simulate this in the same JVM -->
	<bean id="realWebService" class="com.tmg.fuse.poc.RealCRMWebServiceBean"
        init-method="start" destroy-method="stop">
    	<!-- url of the real web service we have proxied -->
    	<property name="url" value="http://localhost:9000/real-crm-service"/>
  	</bean>
	
	<!-- bean that enriches the SOAP request -->
  	<bean id="XRefIdToSOAPBean" class="com.tmg.fuse.poc.XRefIdToSOAPBean"/>
  
    <bean id="accountprocessor" class="com.tmg.fuse.poc.AccountProcessor"/>
	<bean id="guidEnrichStrategy" class="com.tmg.fuse.poc.GUIDAggregationStrategy"/>
>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
	
	<!--  ************************* -->
	<!--  Camel Context Definition  -->
	<!--  ************************* -->
	
	<camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
	    
	    <endpoint id="callRealCRMWebService" uri="http://localhost:9000/real-crm-service?throwExceptionOnFailure=false"/>
	   

		<!--  *************************  -->
		<!--  REST to Topic Camel Route  -->
		<!--  *************************  -->	
<<<<<<< HEAD
	    <route streamCache="true" errorHandlerRef="accountTopicErrorHandler">
	        <from uri="cxfrs://bean://rsServer"/>
        	<log message="Retrieved request for operation: ${header.operationName}"/>
        
        	<choice>
           	    <when>
               		<simple>${in.header.operationName} == 'retrieveAccount'</simple>
               		<log message="Retrieving account from CRM"/>
               		<setBody>
		            	<simple>select xrefId from account where id = ${body}</simple>
		        	</setBody>
	        		<enrich uri="jdbc:dataSource"/>
               		<to uri="bean:retrieveAccount"/>
               		<log message="Calling CRM service"/>
               		<to uri="cxf:bean:account?dataFormat=POJO"/>
                   </when>                  
           	    <when>	
               		<simple>${in.header.operationName} == 'createAccount'</simple>
               		<process ref="accountprocessor"/>
                	<enrich uri="direct:guidEnricher" strategyRef="guidEnrichStrategy"/>	                                
                	<log message="Putting createAccount message on topic ${body}"/>	            
                	<inOnly uri="activemq:topic:accountTopic?disableReplyTo=true"/>	  	    	                     
=======
	    <route errorHandlerRef="accountTopicErrorHandler">
	        <from uri="cxfrs://bean://rsServer"/>
	        <log message="Retrieved request for operation: ${header.operationName}"/>
	        <choice>
	            <when>
                	<simple>${header.operationName} == 'retrieveAccount'</simple>
                	<log message="Retrieving account from CRM"/>
                	<setBody>
		        		<simple>select xrefId from account where id = ${body}</simple>
		        	</setBody>
		        	<enrich uri="jdbc:dataSource"/>
                	<to uri="bean:XRefIdToSOAPBean"/>
                	<log message="Calling CRM service"/>
                	<to uri="cxf:bean:account?dataFormat=MESSAGE"/>
	            </when>
	            <when>
	                <simple>${in.header.operationName} regex 'createAccount'</simple>
	               	<process ref="accountprocessor"/>
	                <enrich uri="direct:guidEnricher" strategyRef="guidEnrichStrategy"/>	                                
	                <log message="Putting createAccount message on topic ${body}"/>	            
	                <inOnly uri="activemq:topic:accountTopic?disableReplyTo=true"/>	   	                     
>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
	            </when>
	            <otherwise>
	            	<log message="Request unavailable"/>           	
	            </otherwise>
	        </choice>
	    </route>
		
<<<<<<< HEAD
		<!-- Error route for account route  --> 
=======
		<!-- Error route for account route  -->
>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
		<route>
			<from uri="activemq:accountTopicDLQ"/>
			<log message="MESSAGE READ FROM accountTopicDLQ ERROR QUEUE ${body}" />
		</route>
<<<<<<< HEAD
		 
		 
=======
		
>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
		<!-- Route to enrich the create account message with a GUID from the database -->
		<route>
			<from uri="direct:guidEnricher"/>
			<setBody>
        		<simple>values next value for seq_xrefId</simple>
        	</setBody>
        	<to uri="jdbc:dataSource"/> 
		</route>
<<<<<<< HEAD
    	<!--  ******************************  -->
		<!--  Topic to CRM Camel Route  -->
		<!--  ******************************  -->	
	    
=======


		<!--  ******************************  -->
		<!--  Topic to CRM Camel Route  -->
		<!--  ******************************  -->	
>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
	    <route>
	    	<from uri="activemq:topic:accountTopic"/>
	    	<log message="CRM CONSUMED - ${body}"/>
	    </route>
<<<<<<< HEAD
	     
 		<!--  ******************************  -->
		<!--  Topic to PSP Camel Route  -->
		<!--  ******************************  -->	   
    	
=======
    
 		<!--  ******************************  -->
		<!--  Topic to PSP Camel Route  -->
		<!--  ******************************  -->	   
>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
    	<route>
	    	<from uri="activemq:topic:accountTopic"/>
	    	<log message="PSP CONSUMED - ${body}"/>
	    </route>
<<<<<<< HEAD
		    
=======
    
>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
 		<!--  *****************************************************************************************  -->
		<!--   Dummy route for the CRM backend service. Has a cxf proxy service infront of the real one  -->
		<!--  *****************************************************************************************  -->	   
  	  	<!-- Dummy route for the CRM backend service. Has a cxf proxy service infront of the real one -->
    	<route streamCache="true">
      		<!-- CXF consumer using MESSAGE format -->
      		<from uri="cxf:bean:account?dataFormat=MESSAGE"/>
      		<!-- log input received -->
      		<to uri="log:input"/>
      		<!-- send proxied request to real web service -->
      		<to ref="callRealCRMWebService"/>
      		<!-- log answer from real web service -->
      		<to uri="log:output?showStreams=true"/>
   	 	</route>
	</camelContext>
<<<<<<< HEAD
</beans>
=======
</beans>
>>>>>>> 7bdaae4ae37043dc1f6527b0a9e3cf8db152be0d
