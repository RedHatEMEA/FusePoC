<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tmg="http://account.poc.fuse.tmg.com"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
							http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
							http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
							http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<!--  *************************  -->
	<!--  JDBC Configuration	     -->
	<!--  *************************  -->	

	<jdbc:embedded-database id="dataSource" type="DERBY">
        <jdbc:script location="classpath:sql/init.sql"/>
    </jdbc:embedded-database>
    
    
	<!--  *************************  -->
	<!--  CXF Endpoint Configuration -->
	<!--  *************************  -->	    
  	<cxf:cxfEndpoint id="account"
                   address="http://localhost:9001/proxy-crm"
                   endpointName="s:AccountService"
                   serviceName="s:AccountServiceService"
                   serviceClass="com.tmg.fuse.poc.AccountEndpointService"
                   wsdlURL="etc/currentCRMService.wsdl"
                   xmlns:s="http://account.poc.fuse.tmg.com">
    	<cxf:properties>
	        <entry key="dataFormat" value="CXF_MESSAGE"/>
	    </cxf:properties>
    </cxf:cxfEndpoint>
    
    <cxf:cxfEndpoint id="legacyaccount"
                   address="http://localhost:9001/legacy-proxy-crm"
                   endpointName="s:AccountService"
                   serviceName="s:AccountServiceService"
                   serviceClass="com.tmg.fuse.poc.LegacyAccountEndpointService"
                   wsdlURL="etc/legacyCRMService.wsdl"
                   xmlns:s="http://legacy.account.poc.fuse.tmg.com">
    	<cxf:properties>
	        <entry key="dataFormat" value="CXF_MESSAGE"/>
	    </cxf:properties>
    </cxf:cxfEndpoint>
    
    <cxf:cxfEndpoint id="psp"
                   address="http://localhost:9001/proxy-psp"
                   endpointName="s:PaymentServiceImplPort"
                   serviceName="s:PaymentServiceImplService"
                   serviceClass="com.tmg.fuse.poc.PSPEndpointService"
                   wsdlURL="etc/paymentService.wsdl"
                   xmlns:s="http://psp.poc.fuse.tmg.com">
    	<cxf:properties>
	        <entry key="dataFormat" value="CXF_MESSAGE"/>
	    </cxf:properties>
    </cxf:cxfEndpoint>
    
	<!--  *************************  -->
	<!--  JMS Configuration          -->
	<!--  *************************  -->	

	<bean id="activemqx" class="org.apache.activemq.camel.component.ActiveMQComponent">
      <property name="configuration" ref="jmsConfig" />
   	</bean>
	
	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration" >
	  <property name="connectionFactory" ref="jmsPooledConnectionFactory" /> 
	  <property name="transacted" value="true" /> 
	  <property name="transactionManager" ref="jmsTransactionManager" />
	  <property name="cacheLevelName" value="CACHE_CONSUMER" />
	 </bean>
	
	<bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
	  <property name="connectionFactory" ref="jmsPooledConnectionFactory" />
	 </bean>           
	
	<bean id="jmsPooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
	      init-method="start" destroy-method="stop" >
	  <property name="maxConnections" value="2" />
	  <property name="connectionFactory" ref="jmsConnectionFactory" />
	 </bean> 
	
	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"> 
	  <property name="brokerURL" value="vm:tmgAMQBroker" /> 
	  <property name="watchTopicAdvisories" value="false" />
	  <property name="redeliveryPolicy" ref="jmsRedeliverPolicy"/>
	</bean>

	<bean id="jmsRedeliverPolicy" class="org.apache.activemq.RedeliveryPolicy">
	    <property name="maximumRedeliveries" value="5"/>
	    <property name="initialRedeliveryDelay" value="1000"/>
	    <property name="maximumRedeliveryDelay" value="10000"/>
	    <property name="useExponentialBackOff" value="true"/>
	    <property name="backOffMultiplier" value="2"/>
	</bean>
	 
	
	<!--  ************************* -->
	<!--  Set up Error Handlers -->
	<!--  ************************* -->	
	<bean id="accountTopicErrorHandler" class="org.apache.camel.builder.DeadLetterChannelBuilder">
       <property name="deadLetterUri" value="activemq:accountTopicDLQ"/>
       <property name="redeliveryPolicy" ref="accountTopicRedeliveryPolicyConfig"/>
   </bean>
 
   <!-- set the redelivery settings -->
	<bean id="accountTopicRedeliveryPolicyConfig" class="org.apache.camel.processor.RedeliveryPolicy">
       <property name="maximumRedeliveries" value="3"/>
       <property name="redeliveryDelay" value="250"/>
   </bean>
   
   	<bean id="required" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
		<property name="transactionManager" ref="jmsTransactionManager"/>
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
	</bean>

	<!--  ************************* -->
	<!--  Set up the Rest Resources -->
	<!--  ************************* -->

    <cxf:rsServer id="rsServer" address="http://localhost:9090/route" serviceClass="com.tmg.fuse.poc.AccountResource"/>


	<!--  *******************************  -->
	<!--  Set up Beans to assist with POC  -->
	<!--  *******************************  -->	

	<!-- Use a bean to start and stop the real web service (is not Camel specific) -->
  	<!-- In a real use-case the real web service would be the real CRM service running on another server but we simulate this in the same JVM -->
	<bean id="realCRMWebService" class="com.tmg.fuse.poc.RealCRMWebServiceBean"
        init-method="start" destroy-method="stop">
    	<!-- url of the real web service we have proxied -->
    	<property name="url" value="http://localhost:9000/real-crm-service"/>
  	</bean>
  	
  	<bean id="legacyRealCRMWebService" class="com.tmg.fuse.poc.LegacyRealCRMWebServiceBean"
        init-method="start" destroy-method="stop">
    	<!-- url of the real web service we have proxied -->
    	<property name="url" value="http://localhost:9000/legacy-real-crm-service"/>
  	</bean>
  	
	<bean id="realPSPWebService" class="com.tmg.fuse.poc.RealPSPWebServiceBean"
        init-method="start" destroy-method="stop">
    	<!-- url of the real web service we have proxied -->
    	<property name="url" value="http://localhost:9000/real-psp-service"/>
  	</bean>
  	
	<!-- bean that enriches the SOAP request -->
  	<bean id="retrieveAccount" class="com.tmg.fuse.poc.RetrieveAccountProcessor"/>
  	<bean id="createAccount" class="com.tmg.fuse.poc.CreateAccountProcessor"/>
  	<bean id="updateAccount" class="com.tmg.fuse.poc.UpdateAccountprocessor"/>
  	<bean id="pspCreateAccount" class="com.tmg.fuse.poc.PSPCreateAccountProcessor"/>
  	<bean id="accountDetailsProcessor" class="com.tmg.fuse.poc.AccountDetailsProcessor"/>
  	<bean id="legacyAccountDetailsProcessor" class="com.tmg.fuse.poc.LegacyAccountDetailsProcessor"/>
    <bean id="accountprocessor" class="com.tmg.fuse.poc.AccountProcessor"/>
	<bean id="guidEnrichStrategy" class="com.tmg.fuse.poc.GUIDAggregationStrategy"/>
	<bean id="updateAccountStrategy" class="com.tmg.fuse.poc.UpdateAccountAggregationStrategy"/>
	<bean id="validateAccount" class="com.tmg.fuse.poc.AccountValidationProcessor"/>
	<bean id="createAccountException" class="java.lang.IllegalArgumentException">
	   <constructor-arg index="0" value="Error in Create Account"/>
	</bean>
	
	<!-- 
	<bean id="camelTracer" class="org.apache.camel.processor.interceptor.Tracer">
	    <property name="traceExceptions" value="true"/>
	    <property name="traceInterceptors" value="true"/>
	    <property name="logLevel" value="INFO"/>
	    <property name="logName" value="com.mycompany.messages"/>
	</bean>
 -->
	
	
	
	<!--  ************************* -->
	<!--  Camel Context Definition  -->
	<!--  ************************* -->
	
	<camelContext id="camel" xmlns="http://camel.apache.org/schema/spring" >
	
		<!--  ************************* -->
		<!--  Endpoint for real CRM service  -->
		<!--  ************************* -->
	    <endpoint id="callRealCRMWebService" uri="http://localhost:9000/real-crm-service?throwExceptionOnFailure=false"/>
	    <endpoint id="callLegacyRealCRMWebService" uri="http://localhost:9000/legacy-real-crm-service?throwExceptionOnFailure=false"/>
	   	<endpoint id="callRealPSPWebService" uri="http://localhost:9000/real-psp-service?throwExceptionOnFailure=false"/>
	
		<!--  ************************* -->
		<!--  Data Formats Definitions  -->
		<!--  ************************* -->
		<dataFormats>
		    <json id="accountDetailsFormat" unmarshalTypeName="com.tmg.fuse.poc.account.AccountDetails"/>
		    <json id="legacyAccountDetailsFormat" unmarshalTypeName="com.tmg.fuse.poc.account.legacy.AccountDetails"/>
		</dataFormats>
	   

		<!--  *************************  -->
		<!--  REST to Topic Camel Route  -->
		<!--  *************************  -->	

	    <route streamCache="true" >
	        <from uri="cxfrs://bean://rsServer"/>
        	<log message="Retrieved request for operation: ${header.operationName}"/>
        
        	<choice>
           	    <when>
               		<simple>${in.header.operationName} == 'retrieveAccount'</simple>
               		<log message="Retrieving account from CRM"/>
               		<!-- NAME is only being retrieved so we can show that updates work -->
               		<setBody>
		            	<simple>select CRMID, NAME from account where XREFID = ${body}</simple>
		        	</setBody>
	        		<enrich uri="jdbc:dataSource"/>
               		<to uri="bean:retrieveAccount"/>
               		<log message="Calling CRM service"/>
               		  
               		<to uri="cxf:bean:account?dataFormat=POJO"/>
               		<to uri="bean:accountDetailsProcessor"/>
               		<marshal ref="accountDetailsFormat"/>
               		
               		<!-- 
               		<to uri="cxf:bean:legacyaccount?dataFormat=POJO"/>
               		<to uri="bean:legacyAccountDetailsProcessor"/>
               		<marshal ref="legacyAccountDetailsFormat"/>
               		 -->
                   </when>                  
           	    <when>	
               		<simple>${in.header.operationName} == 'createAccount'</simple>
               		<process ref="accountprocessor"/>
                	<enrich uri="direct:guidEnricher" strategyRef="guidEnrichStrategy"/>	                                
                	<log message="Putting createAccount message on topic ${body}"/>	    
                	<wireTap uri="direct:dummyAccountInsert"/>        
                	<inOnly uri="activemqx:topic:accountTopic?disableReplyTo=true"/>	  	    	                     
	            </when>
	            <when>	
               		<simple>${in.header.operationName} == 'updateAccount'</simple>
               		<process ref="accountprocessor"/>
  	    	        <enrich uri="direct:fetchAccount" strategyRef="updateAccountStrategy"/>             
  	    	        <log message="After enrich ${body}"/>
  	    	        <wireTap uri="direct:dummyAccountUpdate"/>
  	    	        <process ref="updateAccount"/>
		        	<to uri="cxf:bean:account?dataFormat=POJO"/>
		        	<marshal ref="xstream"/>>
	            </when>
	            <otherwise>
	            	<log message="Request unavailable"/>           	
	            </otherwise>
	        </choice>
	        <to uri="mock:client"/>
	    </route>
		

		<!-- Error route for account route  --> 
		<route>
			<from uri="activemq:accountTopicDLQ"/>
			<log message="MESSAGE READ FROM accountTopicDLQ ERROR QUEUE ${body}" />
		</route>

		<!-- Route to enrich the create account message with a GUID from the database -->
		<route>
			<from uri="direct:guidEnricher"/>
			<setBody>
        		<simple>values next value for seq_xrefId</simple>
        	</setBody>
        	<to uri="jdbc:dataSource"/> 
		</route>

		<route>
			<from uri="direct:fetchAccount"/>
			<setBody>
        		<simple>select xrefId, name from account where xrefid = ${body.accountID}</simple>
        	</setBody>
        	<to uri="jdbc:dataSource"/> 
        	<log message="fetched account ${body}"/>
		</route>

		<route>
			<from uri="direct:dummyAccountUpdate"/>
			<setBody>
		   		<simple>update account set name = '${body.name}' where xrefid = ${body.accountID}</simple>
		    </setBody>
		    <to uri="jdbc:dataSource"/>
		</route>
		
		<route>
			<from uri="direct:dummyAccountInsert"/>
			<setBody>
		   		<simple>insert into account(name, xrefid, crmid, pspid) values ('${body.name}', ${body.accountID}, 0,0)</simple>
		    </setBody>
		    <to uri="jdbc:dataSource"/>
		</route>
		<!--  ******************************  -->
		<!--  Topic to CRM Camel Route  -->
		<!--  ******************************  -->	
	    <route errorHandlerRef="accountTopicErrorHandler">
	    	<from uri="activemqx:topic:accountTopic"/>
	    	<process ref="createAccount"/>
	    	<to uri="cxf:bean:account?dataFormat=POJO"/>
	    	<process ref="validateAccount"/>
	    	<choice>
	    		<when>
	    			<simple>${body.wsError.errorCode} != 'null'</simple>
	    			<log message="[TMG_ERROR] CRM account [XREFID=${body.wsError.errorCode}] failed to be created on the CRM system. Message has been written to [activemq:AccountCreateErrorQueue]"/>
	    			<inOnly uri="activemqx:AccountCreateErrorQueue"/>
	    		</when>
	    		<otherwise>
	    			<log message="[TMG INFO] CRM account created successfully"/>
	    		</otherwise>
	    	</choice>	
	    </route>

    
 		<!--  ******************************  -->
		<!--  Topic to PSP Camel Route  -->
		<!--  ******************************  -->	   
	    <route errorHandlerRef="accountTopicErrorHandler">
	    	<from uri="activemqx:topic:accountTopic"/>
	    	<process ref="pspCreateAccount"/>
	    	<to uri="cxf:bean:psp?dataFormat=POJO"/>
	    	<process ref="validateAccount"/>
	    	<choice>
	    		<when>
	    			<simple>${body.responseStatus.exception} != 'null'</simple>
	    			<log message="[TMG_ERROR] PSP account [XREFID=${body.responseStatus.statusCode}] failed to be created on the PSP system. Message has been written to [activemq:AccountCreateErrorQueue]"/>
	    			<inOnly uri="activemqx:AccountCreateErrorQueue"/>
	    		</when>
	    		<otherwise>
	    			<log message="[TMG INFO] PSP account created successfully"/>
	    		</otherwise>
	    	</choice>	
	    </route>
	    
 		<!--  ******************************  -->
		<!--  Batch account create Route       -->
		<!--  ******************************  -->	
		<route>
	        <from uri="file:////home/gcolman/RedHat/Accounts/telegraph/poc/batch?delete=true&amp;consumer.delay=10000" />	
	        <log message="FROM CSV ${body}"/>
	        <unmarshal><csv /></unmarshal>
	        <split>
				<simple>body</simple>
				<to uri="direct:handleBatchQueue"/>
			</split>
		</route>

		<route>
			<from uri="direct:handleBatchQueue"/>
			<setHeader headerName="operationName">
				<constant>batchAccount</constant>	
			</setHeader>
			<process ref="accountprocessor"/>
			<enrich uri="direct:guidEnricher" strategyRef="guidEnrichStrategy"/>	                                
            <log message="Putting createAccount message on topic ${body}"/>	    
            <wireTap uri="direct:dummyAccountInsert"/>        
            <inOnly uri="activemqx:topic:accountTopic?disableReplyTo=true"/>	  			
		</route>

 		<!--  *****************************************************************************************  -->
		<!--   Dummy routes for the CRM/PSP backend service. Has a cxf proxy service infront of the real one  -->
		<!--  *****************************************************************************************  -->	   
    	<route streamCache="true">
      		<!-- CXF consumer using MESSAGE format -->
      		<from uri="cxf:bean:account?dataFormat=MESSAGE"/>
      		<!-- log input received -->
      		<to uri="log:input?showStreams=true"/>
      		<!-- send proxied request to real web service -->
      		<to ref="callRealCRMWebService"/>
      		<!-- log answer from real web service -->
      		<to uri="log:output?showStreams=true"/>
   	 	</route>
   	 	
   	 	<route streamCache="true">
      		<!-- CXF consumer using MESSAGE format -->
      		<from uri="cxf:bean:legacyaccount?dataFormat=MESSAGE"/>
      		<!-- log input received -->
      		<to uri="log:input?showStreams=true"/>
      		<!-- send proxied request to real web service -->
      		<to ref="callLegacyRealCRMWebService"/>
      		<!-- log answer from real web service -->
      		<to uri="log:output?showStreams=true"/>
   	 	</route>
   	 	
   	 	<route streamCache="true">
      		<!-- CXF consumer using MESSAGE format -->
      		<from uri="cxf:bean:psp?dataFormat=MESSAGE"/>
      		<!-- log input received -->
      		<to uri="log:input?showStreams=true"/>
      		<!-- send proxied request to real web service -->
      		<to ref="callRealPSPWebService"/>
      		<!-- log answer from real web service -->
      		<to uri="log:output?showStreams=true"/>
   	 	</route>
	</camelContext>

</beans>